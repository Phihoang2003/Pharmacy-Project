package GUI;

import BUS.NhanVien_bus;
import DAO.NhanVienDAO;
import DTO.CaLamViecEnum;
import DTO.ChucVuEnum;
import DTO.NhanVien;
import DTO.TinhTrangNVEnum;
import com.toedter.calendar.JDateChooser;
import utils.SVGImage;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class NhanVien_GUI extends JPanel {
    private final NhanVien_bus bus = new NhanVien_bus();
    private DefaultTableModel tableModel = new DefaultTableModel();
    private JDialog CapNhatNhanVienDialog;
    private ButtonGroup Gender;
    private JDialog ThemNhanVienDialog;
    private JButton btn_LamMoi;
    private JButton btn_TimKiem;
    private JComboBox<String> caLamViec;
    private JComboBox<String> caLamViec1;
    private JComboBox<String> chucVu;
    private JComboBox<String> chucVu1;
    private JPanel iconCapNhat;
    private JPanel iconThem;
    private JRadioButton rad_nam;
    private JRadioButton rad_nam1;
    private JRadioButton rad_nu1;
    private JTable table_DSNV;
    private JComboBox<String> tinhTrang;
    private JComboBox<String> tinhTrang1;
    private JTextField txt_NhapSDT;
    private JDateChooser txt_date;
    private JDateChooser txt_date1;
    private JTextField txt_cccd;
    private JTextField txt_cccd1;
    private JTextField txt_email;
    private JTextField txt_email1;
    private JTextField txt_ma;
    private JTextField txt_ma1;
    private JTextField txt_sdt;
    private JTextField txt_sdt1;
    private JTextField txt_ten;
    private JTextField txt_ten1;

    public NhanVien_GUI() {
        initComponents();
        txt_date.setDateFormatString("MMM d, yyyy");
        txt_date.setLocale(Locale.forLanguageTag("vi-VN"));
        ImageIcon img_btnTimKiem = new ImageIcon("icon/buttonTimKiem.png");
        Image scaled_btnTimKiem = img_btnTimKiem.getImage().getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        img_btnTimKiem = new ImageIcon(scaled_btnTimKiem);
        btn_TimKiem.setIcon(img_btnTimKiem);

        SVGImage img_btnLamMoi = new SVGImage();
        img_btnLamMoi.setSvgImage("icon/update.svg", 15, 15);
        btn_LamMoi.setIcon(img_btnLamMoi.getIcon());

        iconThem.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                ThemNhanVienDialog.setVisible(true);
            }
        });
        iconCapNhat.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                int selectedRow = table_DSNV.getSelectedRow();
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(null, "Bạn chưa chọn nhân viên cần cập nhật");
                    return;
                }
                CapNhatNhanVienDialog.setVisible(true);
            }
        });

        tableModel = (DefaultTableModel) table_DSNV.getModel();
        table_DSNV.setModel(tableModel);
        loadData();

        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        ThemNhanVienDialog = new JDialog();
        JPanel jPanel6 = new JPanel();
        JPanel jPanel9 = new JPanel();
        JLabel jLabel8 = new JLabel();
        JLabel lblEmail = new JLabel();
        txt_ten = new JTextField();
        JLabel lblSDT = new JLabel();
        JLabel lblCCCD = new JLabel();
        txt_sdt = new JTextField();
        JLabel lblHoTen = new JLabel();
        JLabel lblMa = new JLabel();
        txt_ma = new JTextField();
        JLabel lblBirth = new JLabel();
        txt_date = new JDateChooser();
        JLabel lblGioiTinh = new JLabel();
        txt_email = new JTextField();
        rad_nam = new JRadioButton();
        JRadioButton rad_nu = new JRadioButton();
        JLabel lblChucVu = new JLabel();
        chucVu = new JComboBox<>();
        JLabel lblTinhTrang = new JLabel();
        tinhTrang = new JComboBox<>();
        JLabel lblCaLam = new JLabel();
        caLamViec = new JComboBox<>();
        txt_cccd = new JTextField();
        JButton btnThem = new JButton();
        JButton btnHuyThem = new JButton();
        Gender = new ButtonGroup();
        CapNhatNhanVienDialog = new JDialog();
        JPanel jPanel10 = new JPanel();
        JPanel jPanel11 = new JPanel();
        JLabel jLabel14 = new JLabel();
        JLabel lblEmail1 = new JLabel();
        txt_ten1 = new JTextField();
        JLabel lblSDT1 = new JLabel();
        JLabel lblCCCD1 = new JLabel();
        txt_sdt1 = new JTextField();
        JLabel lblHoTen1 = new JLabel();
        JLabel lblMa1 = new JLabel();
        txt_ma1 = new JTextField();
        JLabel lblBirth1 = new JLabel();
        txt_date1 = new JDateChooser();
        JLabel lblGioiTinh1 = new JLabel();
        txt_email1 = new JTextField();
        rad_nam1 = new JRadioButton();
        rad_nu1 = new JRadioButton();
        JLabel lblChucVu1 = new JLabel();
        chucVu1 = new JComboBox<>();
        JLabel lblTinhTrang1 = new JLabel();
        tinhTrang1 = new JComboBox<>();
        JLabel lblCaLam1 = new JLabel();
        caLamViec1 = new JComboBox<>();
        txt_cccd1 = new JTextField();
        JButton btnCapNhat = new JButton();
        JButton btnHuyCapNhat = new JButton();
        JPanel jPanel1 = new JPanel();
        iconThem = new JPanel();
        SVGImage jLabel2 = new SVGImage();
        JLabel jLabel1 = new JLabel();
        iconCapNhat = new JPanel();
        SVGImage jLabel5 = new SVGImage();
        JLabel jLabel3 = new JLabel();
        JPanel jPanel5 = new JPanel();
        JLabel jLabel4 = new JLabel();
        SVGImage jLabel13 = new SVGImage();
        JPanel jPanel7 = new JPanel();
        SVGImage jLabel9 = new SVGImage();
        JLabel jLabel10 = new JLabel();
        txt_NhapSDT = new JTextField();
        JLabel jLabel38 = new JLabel();
        btn_TimKiem = new JButton();
        btn_LamMoi = new JButton();
        JPanel jPanel12 = new JPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        table_DSNV = new JTable();

        ThemNhanVienDialog.setTitle("THÊM NHÂN VIÊN");
        ThemNhanVienDialog.setAlwaysOnTop(true);
        ThemNhanVienDialog.setBackground(new Color(255, 255, 255));
        ThemNhanVienDialog.setLocation(new Point(500, 50));
        ThemNhanVienDialog.setSize(new Dimension(630, 740));
        ThemNhanVienDialog.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                ThemNhanVienDialogMouseClicked();
            }
        });

        jPanel6.setBackground(new Color(255, 255, 255));

        jPanel9.setBackground(new Color(22, 97, 86));

        jLabel8.setFont(new Font("Bahnschrift SemiBold", Font.BOLD, 14));
        jLabel8.setForeground(new Color(255, 255, 255));
        jLabel8.setText("THÊM NHÂN VIÊN");

        GroupLayout jPanel9Layout = new GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
                jPanel9Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 169, GroupLayout.PREFERRED_SIZE)
                                .addGap(195, 195, 195))
        );
        jPanel9Layout.setVerticalGroup(
                jPanel9Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel8)
                                .addContainerGap(24, Short.MAX_VALUE))
        );

        lblEmail.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblEmail.setText("Email");

        lblSDT.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblSDT.setText("Số Điện Thoại");

        lblCCCD.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblCCCD.setText("Căn cước công dân");

        lblHoTen.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblHoTen.setText("Họ Tên");

        lblMa.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblMa.setText("Mã Nhân Viên");
        txt_ma.setEditable(false);
        txt_ma.setBackground(new Color(204, 204, 204));

        lblBirth.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblBirth.setText("Ngày Sinh");

        lblGioiTinh.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblGioiTinh.setText("Giới Tính");

        Gender.add(rad_nam);
        rad_nam.setSelected(true);
        rad_nam.setText("Nam");

        Gender.add(rad_nu);
        rad_nu.setText("Nữ");

        lblChucVu.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblChucVu.setText("Chức vụ");

        chucVu.setModel(new DefaultComboBoxModel<>(new String[]{"Nhân Viên", "Quản Lí"}));
        chucVu.setBorder(null);

        lblTinhTrang.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblTinhTrang.setText("Tình Trạng");

        tinhTrang.setModel(new DefaultComboBoxModel<>(new String[]{"Đang Làm Việc", "Nghỉ Phép", "Nghỉ Việc"}));
        tinhTrang.setBorder(null);

        lblCaLam.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblCaLam.setText("Ca Làm Việc");

        caLamViec.setModel(new DefaultComboBoxModel<>(new String[]{"Ca 1", "Ca 2"}));
        caLamViec.setBorder(null);

        btnThem.setBackground(new Color(22, 97, 86));
        btnThem.setFont(new Font("Bahnschrift SemiBold", Font.BOLD, 13));
        btnThem.setForeground(new Color(255, 255, 255));
        btnThem.setText("Thêm Nhân Viên");
        btnThem.addActionListener(this::btnThemActionPerformed);

        btnHuyThem.setBackground(new Color(204, 0, 51));
        btnHuyThem.setFont(new Font("Bahnschrift SemiBold", Font.BOLD, 13));
        btnHuyThem.setForeground(new Color(255, 255, 255));
        btnHuyThem.setText("Hủy Bỏ");
        btnHuyThem.addActionListener(e -> {
            Window window = SwingUtilities.getWindowAncestor(btnHuyThem);
            if (window != null) {
                window.dispose();
            }
        });

        GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel9, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                .addComponent(lblMa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(233, 233, 233)
                                                                .addComponent(lblHoTen, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                                .addComponent(lblTinhTrang, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(32, 32, 32)
                                                                                .addComponent(tinhTrang, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                                                .addGroup(jPanel6Layout.createSequentialGroup()
                                                                                        .addComponent(rad_nam, GroupLayout.PREFERRED_SIZE, 98, GroupLayout.PREFERRED_SIZE)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(rad_nu, GroupLayout.PREFERRED_SIZE, 98, GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(txt_ma, GroupLayout.PREFERRED_SIZE, 230, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(lblSDT, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(txt_sdt, GroupLayout.PREFERRED_SIZE, 230, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(lblEmail, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(txt_email, GroupLayout.PREFERRED_SIZE, 230, GroupLayout.PREFERRED_SIZE)))
                                                                        .addComponent(lblGioiTinh, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                                .addGap(99, 99, 99)
                                                                                .addComponent(btnThem, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)))
                                                                .addGap(61, 61, 61)
                                                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addComponent(btnHuyThem, GroupLayout.PREFERRED_SIZE, 130, GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                                .addGroup(jPanel6Layout.createSequentialGroup()
                                                                                        .addComponent(lblCaLam)
                                                                                        .addGap(41, 41, 41)
                                                                                        .addComponent(caLamViec, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE))
                                                                                .addComponent(lblBirth, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(lblCCCD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(txt_ten)
                                                                                .addComponent(lblChucVu, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(txt_cccd)
                                                                                .addComponent(txt_date, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(chucVu, GroupLayout.PREFERRED_SIZE, 136, GroupLayout.PREFERRED_SIZE)))))
                                                .addGap(0, 29, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jPanel9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblMa, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblHoTen, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_ten, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_ma, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblSDT, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblCCCD))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_sdt, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_cccd, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEmail, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblBirth, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(txt_date, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblChucVu, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                                .addGap(354, 354, 354))
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(txt_email, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblGioiTinh, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(rad_nam)
                                                        .addComponent(rad_nu)
                                                        .addComponent(chucVu, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
                                                .addGap(38, 38, 38)
                                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(lblTinhTrang, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(tinhTrang, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblCaLam, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(caLamViec, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE))
                                                .addGap(51, 51, 51)
                                                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnThem, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnHuyThem, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        GroupLayout ThemNhanVienDialogLayout = new GroupLayout(ThemNhanVienDialog.getContentPane());
        ThemNhanVienDialog.getContentPane().setLayout(ThemNhanVienDialogLayout);
        ThemNhanVienDialogLayout.setHorizontalGroup(
                ThemNhanVienDialogLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(ThemNhanVienDialogLayout.createSequentialGroup()
                                .addComponent(jPanel6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        ThemNhanVienDialogLayout.setVerticalGroup(
                ThemNhanVienDialogLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(ThemNhanVienDialogLayout.createSequentialGroup()
                                .addComponent(jPanel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        CapNhatNhanVienDialog.setTitle("CẬP NHẬT NHÂN VIÊN");
        CapNhatNhanVienDialog.setAlwaysOnTop(true);
        CapNhatNhanVienDialog.setBackground(new Color(255, 255, 255));
        CapNhatNhanVienDialog.setLocation(new Point(500, 50));
        CapNhatNhanVienDialog.setSize(new Dimension(630, 740));

        jPanel10.setBackground(new Color(255, 255, 255));

        jPanel11.setBackground(new Color(22, 97, 86));

        jLabel14.setFont(new Font("Bahnschrift SemiBold", Font.BOLD, 14));
        jLabel14.setForeground(new Color(255, 255, 255));
        jLabel14.setText("CẬP NHẬT NHÂN VIÊN");

        GroupLayout jPanel11Layout = new GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
                jPanel11Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14)
                                .addGap(206, 206, 206))
        );
        jPanel11Layout.setVerticalGroup(
                jPanel11Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel14)
                                .addContainerGap(26, Short.MAX_VALUE))
        );

        lblEmail1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblEmail1.setText("Email");

        lblSDT1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblSDT1.setText("Số Điện Thoại");

        lblCCCD1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblCCCD1.setText("Căn cước công dân");

        lblHoTen1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblHoTen1.setText("Họ Tên");

        lblMa1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblMa1.setText("Mã Nhân Viên");

        txt_ma1.setEditable(false);
        txt_ma1.setBackground(new Color(204, 204, 204));

        lblBirth1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblBirth1.setText("Ngày Sinh");

        lblGioiTinh1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblGioiTinh1.setText("Giới Tính");

        Gender.add(rad_nam1);
        rad_nam1.setText("Nam");

        Gender.add(rad_nu1);
        rad_nu1.setText("Nữ");

        lblChucVu1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblChucVu1.setText("Chức vụ");

        chucVu1.setModel(new DefaultComboBoxModel<>(new String[]{"Nhân viên", "Quản lý"}));
        chucVu1.setBorder(null);

        lblTinhTrang1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblTinhTrang1.setText("Tình Trạng");

        tinhTrang1.setModel(new DefaultComboBoxModel<>(new String[]{"Đang làm việc", "Nghỉ phép", "Nghỉ việc"}));
        tinhTrang1.setBorder(null);

        lblCaLam1.setFont(new Font("Bahnschrift", Font.PLAIN, 13));
        lblCaLam1.setText("Ca Làm Việc");

        caLamViec1.setModel(new DefaultComboBoxModel<>(new String[]{"Ca 1", "Ca 2"}));
        caLamViec1.setBorder(null);

        btnCapNhat.setBackground(new Color(22, 97, 86));
        btnCapNhat.setFont(new Font("Bahnschrift SemiBold", Font.BOLD, 13));
        btnCapNhat.setForeground(new Color(255, 255, 255));
        btnCapNhat.setText("Cập Nhật Nhân Viên");
        btnCapNhat.addActionListener(this::btnCapNhatActionPerformed);

        btnHuyCapNhat.setBackground(new Color(204, 0, 51));
        btnHuyCapNhat.setFont(new Font("Bahnschrift SemiBold", Font.BOLD, 13));
        btnHuyCapNhat.setForeground(new Color(255, 255, 255));
        btnHuyCapNhat.setText("Hủy Bỏ");
        btnHuyCapNhat.addActionListener(this::btnHuyCapNhatActionPerformed);

        GroupLayout jPanel10Layout = new GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
                jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel11, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                                .addComponent(lblMa1, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(233, 233, 233)
                                                                .addComponent(lblHoTen1, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                                                .addGroup(jPanel10Layout.createSequentialGroup()
                                                                                        .addComponent(rad_nam1, GroupLayout.PREFERRED_SIZE, 98, GroupLayout.PREFERRED_SIZE)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(rad_nu1, GroupLayout.PREFERRED_SIZE, 98, GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(txt_ma1, GroupLayout.PREFERRED_SIZE, 230, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(lblSDT1, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(txt_sdt1, GroupLayout.PREFERRED_SIZE, 230, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(lblEmail1, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(txt_email1, GroupLayout.PREFERRED_SIZE, 230, GroupLayout.PREFERRED_SIZE)))
                                                                        .addComponent(lblGioiTinh1, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                                                .addComponent(lblTinhTrang1, GroupLayout.PREFERRED_SIZE, 67, GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(32, 32, 32)
                                                                                .addComponent(tinhTrang1, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE)))
                                                                .addGap(148, 148, 148)
                                                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                                                .addComponent(lblCaLam1)
                                                                                .addGap(41, 41, 41)
                                                                                .addComponent(caLamViec1, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(lblBirth1, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(lblCCCD1, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txt_ten1)
                                                                        .addComponent(lblChucVu1, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txt_cccd1)
                                                                        .addComponent(txt_date1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(chucVu1, GroupLayout.PREFERRED_SIZE, 136, GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                                .addGap(336, 336, 336)
                                                                .addComponent(btnHuyCapNhat, GroupLayout.PREFERRED_SIZE, 130, GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                                .addGap(99, 99, 99)
                                                                .addComponent(btnCapNhat, GroupLayout.PREFERRED_SIZE, 193, GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 4, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
                jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jPanel11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblMa1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblHoTen1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_ten1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_ma1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblSDT1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblCCCD1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_sdt1, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_cccd1, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEmail1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblBirth1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                .addComponent(txt_date1, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblChucVu1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                                .addGap(354, 354, 354))
                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                .addComponent(txt_email1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblGioiTinh1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(rad_nam1)
                                                        .addComponent(rad_nu1)
                                                        .addComponent(chucVu1, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
                                                .addGap(38, 38, 38)
                                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(lblTinhTrang1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(tinhTrang1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblCaLam1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(caLamViec1, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE))
                                                .addGap(50, 50, 50)
                                                .addGroup(jPanel10Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnCapNhat, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnHuyCapNhat, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        GroupLayout CapNhatNhanVienDialogLayout = new GroupLayout(CapNhatNhanVienDialog.getContentPane());
        CapNhatNhanVienDialog.getContentPane().setLayout(CapNhatNhanVienDialogLayout);
        CapNhatNhanVienDialogLayout.setHorizontalGroup(
                CapNhatNhanVienDialogLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(CapNhatNhanVienDialogLayout.createSequentialGroup()
                                .addComponent(jPanel10, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        CapNhatNhanVienDialogLayout.setVerticalGroup(
                CapNhatNhanVienDialogLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(CapNhatNhanVienDialogLayout.createSequentialGroup()
                                .addComponent(jPanel10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBackground(new Color(255, 255, 255));

        jPanel1.setBackground(new Color(255, 255, 255));

        iconThem.setBackground(new Color(255, 255, 255));
        jLabel2.setSvgImage("icon/person-fill-add.svg", 70, 70);
        jLabel1.setBackground(new Color(255, 255, 255));
        jLabel1.setFont(new Font("Bahnschrift", Font.BOLD, 16));
        jLabel1.setForeground(new Color(102, 102, 255));
        jLabel1.setText("THÊM");
        jLabel1.setHorizontalAlignment(JLabel.CENTER);

        GroupLayout iconThemLayout = new GroupLayout(iconThem);
        iconThem.setLayout(iconThemLayout);
        iconThemLayout.setHorizontalGroup(
                iconThemLayout.createParallelGroup(GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
        );
        iconThemLayout.setVerticalGroup(
                iconThemLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        iconCapNhat.setBackground(new Color(255, 255, 255));

        jLabel5.setSvgImage("icon/edit.svg", 70, 70);

        jLabel3.setFont(new Font("Bahnschrift", Font.BOLD, 16));
        jLabel3.setForeground(new Color(102, 102, 255));
        jLabel3.setText("CẬP NHẬT");
        jLabel3.setHorizontalAlignment(JLabel.CENTER);

        GroupLayout iconCapNhatLayout = new GroupLayout(iconCapNhat);
        iconCapNhat.setLayout(iconCapNhatLayout);
        iconCapNhatLayout.setHorizontalGroup(
                iconCapNhatLayout.createParallelGroup(GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel5)
                        .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
        );
        iconCapNhatLayout.setVerticalGroup(
                iconCapNhatLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new Color(255, 255, 255));

        jLabel4.setFont(new Font("Bahnschrift", Font.BOLD, 16));
        jLabel4.setForeground(new Color(102, 102, 255));
        jLabel4.setText("CHI TIẾT");
        jLabel4.setHorizontalAlignment(JLabel.CENTER);

        jLabel13.setSvgImage("icon/detail.svg", 70, 70);

        GroupLayout jPanel5Layout = new GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel13)
                        .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
        );

        jPanel7.setBackground(new Color(255, 255, 255));

        jLabel9.setSvgImage("icon/excel.svg", 70, 70);

        jLabel10.setFont(new Font("Bahnschrift", Font.BOLD, 16));
        jLabel10.setForeground(new Color(102, 102, 255));
        jLabel10.setText("XUẤT EXCEL");
        jLabel10.setHorizontalAlignment(JLabel.CENTER);

        GroupLayout jPanel7Layout = new GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        txt_NhapSDT.setText("Nhập nội dung tìm kiếm");
        txt_NhapSDT.addActionListener(this::txt_NhapSDTActionPerformed);

        jLabel38.setFont(new Font("Bahnschrift", Font.PLAIN, 14));
        jLabel38.setText("Tìm Kiếm Theo Số Điện Thoại");

        btn_LamMoi.setBackground(new Color(32, 131, 116));
        btn_LamMoi.setFont(new Font("Bahnschrift", Font.BOLD, 15));
        btn_LamMoi.setForeground(Color.white);
        btn_LamMoi.setText("Làm mới");
        btn_LamMoi.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btn_LamMoi.setHorizontalAlignment(SwingConstants.LEADING);
        btn_LamMoi.setPreferredSize(new Dimension(90, 31));

        btn_TimKiem.setBackground(new Color(32, 131, 116));
        btn_TimKiem.setFont(new Font("Bahnschrift", Font.BOLD, 15));
        btn_TimKiem.setForeground(new Color(255, 255, 255));
        btn_TimKiem.setText("Tìm");
        btn_TimKiem.addActionListener(this::btn_TimKiemActionPerformed);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(iconThem, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(iconCapNhat)
                                .addComponent(jPanel5)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel7)
                                .addGap(50, 50, 50)
                                .addComponent(txt_NhapSDT, GroupLayout.PREFERRED_SIZE, 244, GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 50)
                                .addComponent(btn_TimKiem, GroupLayout.PREFERRED_SIZE, 102, GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 50)
                                .addComponent(btn_LamMoi, GroupLayout.PREFERRED_SIZE, 113, GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(iconThem, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(jPanel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(iconCapNhat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jPanel7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                                .addGap(476, 476, 476))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_NhapSDT, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btn_LamMoi, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btn_TimKiem, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)), "Danh Sách Nhân Viên", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Bahnschrift", Font.PLAIN, 12)));
        table_DSNV.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{
                        "Mã ", "Họ Tên", "Giới Tính", "Ngày Sinh", "Email", "Số Điện Thoại", "Địa Chỉ", "Chức Vụ", "Tình Trạng", "Ca Làm Việc"
                }
        ) {
            final Class[] types = new Class[]{
                    String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        table_DSNV.setGridColor(new Color(255, 255, 255));
        table_DSNV.setInheritsPopupMenu(true);
        table_DSNV.setSelectionBackground(new Color(153, 153, 153));
        table_DSNV.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                table_DSNVMouseClicked();
            }
        });
        jScrollPane1.setViewportView(table_DSNV);
        if (table_DSNV.getColumnModel().getColumnCount() > 0) {
            table_DSNV.getColumnModel().getColumn(2).setMinWidth(12);
        }

        GroupLayout jPanel12Layout = new GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
                jPanel12Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 1188, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 1176, GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel12Layout.setVerticalGroup(
                jPanel12Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 561, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 537, GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(18, Short.MAX_VALUE)))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 118, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(80, Short.MAX_VALUE))
        );
    }

    private void txt_NhapSDTActionPerformed(ActionEvent actionEvent) {
    }

    private void ThemNhanVienDialogMouseClicked() {
        // TODO add your handling code here:
    }

    private void table_DSNVMouseClicked() {
        try {
            int rowSelected = table_DSNV.getSelectedRow();
            txt_ma1.setText(tableModel.getValueAt(rowSelected, 0).toString());
            txt_ten1.setText(tableModel.getValueAt(rowSelected, 1).toString());
            if (tableModel.getValueAt(rowSelected, 2).toString().equals("Nam")) {
                rad_nam1.setSelected(true);
            } else {
                rad_nu1.setSelected(true);
            }
            txt_date1.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(table_DSNV.getValueAt(rowSelected, 3).toString()));
            txt_email1.setText(tableModel.getValueAt(rowSelected, 4).toString());
            txt_sdt1.setText(tableModel.getValueAt(rowSelected, 5).toString());
            txt_cccd1.setText(tableModel.getValueAt(rowSelected, 6).toString());
            chucVu1.setSelectedItem(tableModel.getValueAt(rowSelected, 7).toString());
            tinhTrang1.setSelectedItem(tableModel.getValueAt(rowSelected, 8).toString());
            caLamViec1.setSelectedItem(tableModel.getValueAt(rowSelected, 9).toString());

        } catch (Exception ex) {
            Logger.getLogger(NhanVien_GUI.class.getName()).log(Level.SEVERE, null, ex);

        }
    }

    private void btn_TimKiemActionPerformed(ActionEvent evt) {
        String id = txt_NhapSDT.getText();
        if (id.isBlank()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số điện thoại của nhân viên");
            return;
        }
        NhanVien nv = bus.findBySDT(id);
        if (nv == null) {
            JOptionPane.showMessageDialog(this, "Nhân viên không tồn tại");
        } else {
            tableModel.setRowCount(0);
            tableModel.addRow(new Object[]{nv.getMaNhanVien(), nv.getHoTen(), nv.getGioiTinh() == 1 ? "Nam" : "Nữ", nv.getNgaySinh().toString(), nv.getEmail(), nv.getSdt(), nv.getDiaChi(), nv.getChucVu().toString(), nv.getTrangThai().toString(), nv.getCaLamViec().toString()});
        }
    }

    private final NhanVienDAO nvdao = new NhanVienDAO();

    private boolean checkAge(Date birthDate) {
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.YEAR, -23); // Trừ đi 23 năm từ ngày hiện tại
        Date minDate = cal.getTime();
        if (birthDate != null && birthDate.before(minDate)) {
            return true;
        } else {
            JOptionPane.showMessageDialog(ThemNhanVienDialog, "Nhân viên phải lớn hơn 23 tuổi mới được vào làm");
            return false;
        }
    }

    private boolean checkRangBuoc() {
        if (txt_ten.getText().isEmpty() || txt_sdt.getText().isEmpty() || txt_email.getText().isEmpty() || txt_cccd.getText().isEmpty()) {
            JOptionPane.showMessageDialog(ThemNhanVienDialog, "Các trường không được để trống");
            return false;
        }
        if (!txt_sdt.getText().matches("0\\d{9}")) {
            JOptionPane.showMessageDialog(ThemNhanVienDialog, "Số điện thoại phải bắt đầu bằng số 0 và có 10 chữ số");
            return false;
        }
        if (!txt_email.getText().matches("^[\\w-]+@([\\w-]+\\.)+[\\w-]+$")) {
            JOptionPane.showMessageDialog(ThemNhanVienDialog, "Email không hợp lệ");
            return false;
        }

        if (!txt_cccd.getText().matches("\\d{12}")) {
            JOptionPane.showMessageDialog(ThemNhanVienDialog, "Căn cước công dân phải bao gồm 12 chữ số");
            return false;
        }

        String[] words = txt_ten.getText().split("\\s+");
        if (words.length < 2) {
            JOptionPane.showMessageDialog(ThemNhanVienDialog, "Họ tên phải từ 2 từ trở lên");
            return false;
        }
        for (String word : words) {
            if (!Character.isUpperCase(word.charAt(0))) {
                JOptionPane.showMessageDialog(ThemNhanVienDialog, "Họ tên phải in hoa chữ cái đầu");
                return false;
            }
        }
        return true;
    }

    private boolean checkRangBuocCapNhat() {
        if (txt_ten1.getText().isEmpty() || txt_sdt1.getText().isEmpty() || txt_email1.getText().isEmpty() || txt_cccd1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Các trường không được để trống");
            return false;
        }
        if (!txt_sdt1.getText().matches("0\\d{9}")) {
            JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Số điện thoại phải bắt đầu bằng số 0 và có 10 chữ số");
            return false;
        }
        if (!txt_email1.getText().matches("^[\\w-]+@([\\w-]+\\.)+[\\w-]+$")) {
            JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Email không hợp lệ");
            return false;
        }

        if (!txt_cccd1.getText().matches("\\d{12}")) {
            JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Căn cước công dân phải bao gồm 12 chữ số");
            return false;
        }

        String[] words = txt_ten1.getText().split("\\s+");
        if (words.length < 2) {
            JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Họ tên phải từ 2 từ trở lên");
            return false;
        }
        for (String word : words) {
            if (!Character.isUpperCase(word.charAt(0))) {
                JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Họ tên phải in hoa chữ cái đầu");
                return false;
            }
        }
        return true;
    }

    private NhanVien getNVien() {
        int gioitinh;
        NhanVien nv = new NhanVien();
        nv.setHoTen(txt_ten.getText());

        if (rad_nam.isSelected()) {
            gioitinh = 1;
        } else {
            gioitinh = 0;
        }

        TinhTrangNVEnum tt;
        if (Objects.equals(tinhTrang.getSelectedItem(), "Đang làm việc")) {
            tt = TinhTrangNVEnum.DANGLAMVIEC;
        } else if (Objects.equals(tinhTrang.getSelectedItem(), "Nghỉ phép")) {
            tt = TinhTrangNVEnum.NGHIPHEP;
        } else {
            tt = TinhTrangNVEnum.NGHIVIEC;
        }
        nv.setGioiTinh(gioitinh);
        nv.setSdt(txt_sdt.getText());
        nv.setEmail(txt_email.getText());
        nv.setDiaChi(txt_cccd.getText());
        nv.setCaLamViec(Objects.equals(caLamViec.getSelectedItem(), "Ca 1") ? CaLamViecEnum.CA1 : CaLamViecEnum.CA2);
        nv.setChucVu(Objects.equals(chucVu.getSelectedItem(), "Nhân Viên") ? ChucVuEnum.NHANVIEN : ChucVuEnum.QUANLY);
        nv.setTrangThai(tt);
        return nv;
    }

    private void btnThemActionPerformed(ActionEvent evt) {
        try {
            Date utilDate = txt_date.getDate();
            java.sql.Date ns = new java.sql.Date(utilDate.getTime());

            NhanVien nv = getNVien();
            nv.setMaNhanVien(nvdao.getAutoIncrement());
            nv.setNgaySinh(ns);

            if (checkAge(ns)) {
                if (!checkRangBuoc()) {
                    return;
                }

                // Kiểm tra xem thông tin của nhân viên đã tồn tại trong cơ sở dữ liệu hay chưa
                NhanVien existingNV = nvdao.kiemTraLapThongTin(nv);
                if (existingNV != null) {
                    JOptionPane.showMessageDialog(ThemNhanVienDialog, "Thông tin đã được nhập trùng với thông tin đã có trong cơ sở dữ liệu");
                    return;
                }

                // Tiếp tục thêm nhân viên nếu thông tin không trùng lặp
                if (bus.insert(nv)) {
                    tableModel.addRow(new Object[]{nv.getMaNhanVien(), nv.getHoTen(), nv.getGioiTinh() == 1 ? "Nam" : "Nữ", nv.getNgaySinh().toString(), nv.getEmail(), nv.getSdt(), nv.getDiaChi(), nv.getChucVu().toString(), nv.getTrangThai().toString(), nv.getCaLamViec().toString()});
                    ThemNhanVienDialog.dispose();
                    refresh();
                    JOptionPane.showMessageDialog(ThemNhanVienDialog, "Thêm nhân viên thành công!");
                } else {
                    JOptionPane.showMessageDialog(ThemNhanVienDialog, "Hệ thống không thể cập nhật dữ liệu do số điện thoại nhân viên đã tồn tại!");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(NhanVien_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btnCapNhatActionPerformed(ActionEvent evt) {
        int selectedRow = table_DSNV.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn nhân viên cần cập nhật");
            return;
        }
        try {
            NhanVien nv = new NhanVien();
            NhanVienDAO nvdao = new NhanVienDAO();
            TinhTrangNVEnum tt;
            int gioiTinh;
            if (Objects.equals(tinhTrang1.getSelectedItem(), "Đang làm việc")) {
                tt = TinhTrangNVEnum.DANGLAMVIEC;
            } else if (Objects.equals(tinhTrang1.getSelectedItem(), "Nghỉ phép")) {
                tt = TinhTrangNVEnum.NGHIPHEP;
            } else {
                tt = TinhTrangNVEnum.NGHIVIEC;
            }
            if (rad_nam1.isSelected()) {
                gioiTinh = 1;
            } else {
                gioiTinh = 0;
            }
            nv.setMaNhanVien(txt_ma1.getText());
            nv.setHoTen(txt_ten1.getText());
            nv.setGioiTinh(gioiTinh);
            nv.setSdt(txt_sdt1.getText());
            nv.setEmail(txt_email1.getText());
            nv.setDiaChi(txt_cccd1.getText());
            nv.setNgaySinh(new java.sql.Date(txt_date1.getDate().getTime()));
            nv.setChucVu(Objects.equals(chucVu1.getSelectedItem(), "Nhân Viên") ? ChucVuEnum.NHANVIEN : ChucVuEnum.QUANLY);
            nv.setTrangThai(tt);
            nv.setCaLamViec(Objects.equals(caLamViec1.getSelectedItem(), "Ca 1") ? CaLamViecEnum.CA1 : CaLamViecEnum.CA2);
            // Kiểm tra xem thông tin của nhân viên đã tồn tại trong cơ sở dữ liệu hay chưa

            if (checkAge(nv.getNgaySinh())) {
                if (!checkRangBuocCapNhat()) {
                    return;
                }

                NhanVien existingNV;
                existingNV = nvdao.kiemTraLapThongTin(nv);

                if (existingNV != null && !Objects.equals(existingNV.getMaNhanVien(), nv.getMaNhanVien())) {
                    JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Thông tin đã được nhập trùng với thông tin đã có trong cơ sở dữ liệu");
                    return;
                }

                if (bus.update(nv)) {
                    refresh();
                    CapNhatNhanVienDialog.dispose();
                    JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Cập nhật nhân viên thành công!");
                } else {
                    JOptionPane.showMessageDialog(CapNhatNhanVienDialog, "Hệ thống không thể cập nhật dữ liệu do số điện thoại nhân viên đã tồn tại!");
                }

            }
        } catch (Exception ex) {
            Logger.getLogger(NhanVienDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btnHuyCapNhatActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnHuyCapNhatActionPerformed
        CapNhatNhanVienDialog.dispose();
    }

    private void loadData() {
        ArrayList<NhanVien> listNV;
        listNV = bus.selectAll();
        for (NhanVien nv : listNV) {
            tableModel.addRow(new Object[]{nv.getMaNhanVien(), nv.getHoTen(), nv.getGioiTinh() == 1 ? "Nam" : "Nữ", nv.getNgaySinh().toString(), nv.getEmail(), nv.getSdt(), nv.getDiaChi(), nv.getChucVu().toString(), nv.getTrangThai().toString(), nv.getCaLamViec().toString()});
        }
    }

    public void refresh() {
        txt_ma.setText("");
        txt_ten.setText("");
        txt_cccd.setText("");
        txt_sdt.setText("");
        txt_NhapSDT.setText("");
        Gender.clearSelection();
        tableModel.setRowCount(0);
        chucVu.setSelectedIndex(0);
        caLamViec.setSelectedIndex(0);
        tinhTrang.setSelectedIndex(0);
        txt_date.setDate(null);
        txt_email.setText("");
        loadData();
    }
}
